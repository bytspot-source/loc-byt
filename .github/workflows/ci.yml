name: CI/CD

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  REGION: us-west1
  AR_REPO: bytspot-stg-images
  SERVICE_NAME: bytspot-stg-auth-service

jobs:
  build-test-scan:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.2
      - name: Build image (local)
        run: |
          docker build -t auth-service:ci -f services/auth-service/Dockerfile . || echo "No auth-service Dockerfile yet"
      - name: File scan (Trivy)
        run: trivy fs --exit-code 0 --severity HIGH,CRITICAL .
      - name: Image scan (Trivy)
        run: trivy image --exit-code 0 auth-service:ci || true

  push-image:
    needs: build-test-scan
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Auth to GCP (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Configure Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev -q
      - id: push
        name: Build & push API image
        run: |
          IMAGE_URL="${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.AR_REPO }}/bytspot-auth-service:${{ github.sha }}"
          echo "$IMAGE_URL" > image_url.txt
          docker build -t "$IMAGE_URL" -f services/auth-service/Dockerfile .
          docker push "$IMAGE_URL"
      - uses: actions/upload-artifact@v4
        with:
          name: image-url
          path: image_url.txt

  deploy-staging:
    needs: push-image
    runs-on: ubuntu-22.04
    environment:
      name: staging
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: image-url
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Deploy to Cloud Run (staging)
        run: |
          IMAGE_URL=$(cat image_url.txt)
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "$IMAGE_URL" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --max-instances 2 \
            --service-account=${{ secrets.DEPLOYER_SERVICE_ACCOUNT }} \
            --set-env-vars=ENV=staging,GIT_SHA=${{ github.sha }},DATABASE_URL=${{ secrets.STAGING_DATABASE_URL }}

  deploy-production:
    if: github.event_name == 'workflow_dispatch'
    needs: push-image
    runs-on: ubuntu-22.04
    environment:
      name: production
      url: https://api.bytspot.com
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: image-url
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Promote image and deploy (manual)
        run: |
          IMAGE_URL=$(cat image_url.txt)
          gcloud run deploy bytspot-prod-auth-service \
            --image "$IMAGE_URL" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --max-instances 5 \
            --service-account=${{ secrets.DEPLOYER_SERVICE_ACCOUNT }} \
            --set-env-vars=ENV=production,GIT_SHA=${{ github.sha }},DATABASE_URL=${{ secrets.PRODUCTION_DATABASE_URL }}