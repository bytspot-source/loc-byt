name: CI/CD

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  REGION: us-west1
  AR_REPO: bytspot-stg-images
  SERVICE_NAME: bytspot-stg-api
  DASH_SERVICE_NAME: bytspot-stg-dashboard

jobs:
  build-test-scan:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install API deps
        working-directory: services/api
        continue-on-error: true
        run: npm install --no-audit --no-fund --loglevel=error
      - name: Run API unit tests
        working-directory: services/api
        continue-on-error: true
        run: npm test --silent
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.2
      - name: Build image (local)
        run: |
          docker build -t api:ci -f services/api/Dockerfile . || echo "No API Dockerfile yet"
      - name: File scan (Trivy)
        run: trivy fs --exit-code 0 --severity HIGH,CRITICAL .
      - name: Image scan (Trivy)
        run: trivy image --exit-code 0 api:ci || true

  push-image:
    needs: build-test-scan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    outputs:
      image: ${{ steps.push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Auth to GCP (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Configure Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev -q
      - id: push
        name: Build & push API image
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.AR_REPO }}/bytspot-api:${{ github.sha }}"
          echo "IMAGE=$IMAGE" >> "$GITHUB_ENV"
          echo "image=$IMAGE" >> "$GITHUB_OUTPUT"
          docker build -t "$IMAGE" -f services/api/Dockerfile .
          docker push "$IMAGE"

  push-dashboard-image:
    needs: build-test-scan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-22.04
    outputs:
      image: ${{ steps.push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Configure Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev -q
      - id: push
        name: Build & push Dashboard image
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ env.AR_REPO }}/bytspot-dashboard:${{ github.sha }}"
          echo "image=$IMAGE" >> $GITHUB_OUTPUT
          docker build -t "$IMAGE" -f services/dashboard/Dockerfile .
          docker push "$IMAGE"

  deploy-staging:
    needs: push-image
    runs-on: ubuntu-22.04
    environment: staging
    steps:
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Deploy to Cloud Run (staging)
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image "${{ needs.push-image.outputs.image }}" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --max-instances 50 \
            --set-env-vars=ENV=staging,GIT_SHA=${{ github.sha }}

  deploy-staging-dashboard:
    needs: push-dashboard-image
    runs-on: ubuntu-22.04
    environment: staging
    steps:
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Discover API URL
        id: discover
        run: |
          API_URL=$(gcloud run services describe ${SERVICE_NAME} --region ${REGION} --format 'value(status.url)')
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT
      - name: Deploy Dashboard to Cloud Run (staging)
        run: |
          gcloud run deploy ${{ env.DASH_SERVICE_NAME }} \
            --image "${{ needs.push-dashboard-image.outputs.image }}" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --max-instances 20 \
            --set-env-vars=ENV=staging,GIT_SHA=${{ github.sha }},API_URL=${{ steps.discover.outputs.api_url }}

  deploy-production:
    if: github.event_name == 'workflow_dispatch'
    needs: push-image
    runs-on: ubuntu-22.04
    environment:
      name: production
      url: https://api.bytspot.com
    steps:
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Promote image and deploy (manual)
        run: |
          gcloud run deploy bytspot-prod-api \
            --image "${{ needs.push-image.outputs.image }}" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --max-instances 200 \
            --set-env-vars=ENV=production,GIT_SHA=${{ github.sha }}

  deploy-production-dashboard:
    if: github.event_name == 'workflow_dispatch'
    needs: push-dashboard-image
    runs-on: ubuntu-22.04
    environment:
      name: production
      url: https://dashboard.bytspot.com
    steps:
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Discover API URL (prod)
        id: discover
        run: |
          API_URL=$(gcloud run services describe bytspot-prod-api --region ${REGION} --format 'value(status.url)')
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT
      - name: Deploy Dashboard to Cloud Run (prod)
        run: |
          gcloud run deploy bytspot-prod-dashboard \
            --image "${{ needs.push-dashboard-image.outputs.image }}" \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --max-instances 50 \
            --set-env-vars=ENV=production,GIT_SHA=${{ github.sha }},API_URL=${{ steps.discover.outputs.api_url }}